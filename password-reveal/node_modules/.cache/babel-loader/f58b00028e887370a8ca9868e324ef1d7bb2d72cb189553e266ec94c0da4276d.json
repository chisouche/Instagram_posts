{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\vscode_projects\\\\portfolio\\\\Instagram\\\\password-reveal\\\\src\\\\components\\\\PassWordReveal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../style/PassWordReveal.css';\nimport FlashlightOnIcon from '../../assets/icons/flash_on.svg';\nimport FlashlightOffIcon from '../../assets/icons/flash_off.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PassWordReveal = () => {\n  _s();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: passwordShown ? \"text\" : \"password\",\n      className: \"password-input\",\n      placeholder: \"Enter your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: passwordShown ? FlashlightOnIcon : FlashlightOffIcon,\n      onClick: togglePasswordVisibility,\n      alt: \"Toggle password visibility\",\n      className: \"password-toggle-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(PassWordReveal, \"bas2Vmn2NzeTgqNkroDd6vpWxAA=\");\n_c = PassWordReveal;\nexport default PassWordReveal;\nvar _c;\n$RefreshReg$(_c, \"PassWordReveal\");","map":{"version":3,"names":["React","useState","FlashlightOnIcon","FlashlightOffIcon","jsxDEV","_jsxDEV","PassWordReveal","_s","passwordShown","setPasswordShown","togglePasswordVisibility","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/jenni/vscode_projects/portfolio/Instagram/password-reveal/src/components/PassWordReveal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../style/PassWordReveal.css';\r\nimport FlashlightOnIcon from '../../assets/icons/flash_on.svg';\r\nimport FlashlightOffIcon from '../../assets/icons/flash_off.svg';\r\n\r\nconst PassWordReveal = () => {\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setPasswordShown(!passwordShown);\r\n    };\r\n\r\n    return (\r\n        <div className=\"password-container\">\r\n            <input \r\n                type={passwordShown ? \"text\" : \"password\"} \r\n                className=\"password-input\" \r\n                placeholder=\"Enter your password\" \r\n            />\r\n            <img \r\n                src={passwordShown ? FlashlightOnIcon : FlashlightOffIcon} \r\n                onClick={togglePasswordVisibility} \r\n                alt=\"Toggle password visibility\" \r\n                className=\"password-toggle-icon\" \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PassWordReveal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AACpC,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,iBAAiB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMS,wBAAwB,GAAGA,CAAA,KAAM;IACnCD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EACpC,CAAC;EAED,oBACIH,OAAA;IAAKM,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BP,OAAA;MACIQ,IAAI,EAAEL,aAAa,GAAG,MAAM,GAAG,UAAW;MAC1CG,SAAS,EAAC,gBAAgB;MAC1BG,WAAW,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFb,OAAA;MACIc,GAAG,EAAEX,aAAa,GAAGN,gBAAgB,GAAGC,iBAAkB;MAC1DiB,OAAO,EAAEV,wBAAyB;MAClCW,GAAG,EAAC,4BAA4B;MAChCV,SAAS,EAAC;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACX,EAAA,CAtBID,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}